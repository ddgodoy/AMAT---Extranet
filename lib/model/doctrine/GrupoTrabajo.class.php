<?php

/**
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class GrupoTrabajo extends BaseGrupoTrabajo
{
	public function __toString()
	{
		return $this->nombre;
	}
	public static function getRepository()
	{
		return Doctrine::getTable(__CLASS__);
	}
	
	public function getUsusriosMiGrupo($usuarioId)
	{
		$s = Doctrine_Query::create();
		$s->select('u.*');
		$s->from('Usuario u');
		$s->leftJoin('u.UsuarioGrupoTrabajo ugt');
		$s->where('ugt.grupo_trabajo_id = '.$this->getId() );
		$s->andWhere('u.id != '.$usuarioId);
		
		$usuarios = $s->execute();
		
		return $usuarios;
	}
	
	public static  function ArrayDegrupo($id_usuario)
	{
		$grupos = GrupoTrabajoTable::getGruposTrabajoByUsuario($id_usuario);
		$base = 'GrupoTrabajo_';
		$presentacion = array();

		foreach ( $grupos AS $gruposid ) {
			$armado = $base.$gruposid['id'];
			$presentacion[$armado] = 'Grupo - '.$gruposid['nombre'];
		}
		return $presentacion; 
	}

	public static  function ArrayDeMigrupo($id_usuario, $choices='')
	{
		$grupos = GrupoTrabajoTable::getGruposTrabajoByUsuario($id_usuario);
		$base = 'GrupoTrabajo_';
		$presentacion = array();

		foreach ( $grupos AS $gruposid ) {
			if ($choices == '') {
			  $armado = $base.$gruposid['id'];
			} else {
			  $armado = $gruposid['id'];	
			}
			$presentacion[$armado] = $gruposid['nombre'];
		}
		return $presentacion;
	}

	public static function iddegrupos($idUSer, $misuser='')
	{
		$grupos = GrupoTrabajoTable::getGruposTrabajoByUsuario($idUSer);

		if (count($grupos)) {
			if ($misuser=='') {
				$armado =" AND am.entidad IN (";
				$base = 'GrupoTrabajo_';
			} else {
				$armado ="(";
				$base = '';
			}
			$rt = 0;

			foreach ( $grupos AS $gruposid ) {
				$rt++;

				if($rt != count($grupos)) {
				  $armado .= "'".$base.$gruposid->getId()."',";
				} else {
				  $armado .= "'".$base.$gruposid->getId()."')";
				}
			}
		} else  {
			$armado = '(0)';
		}
		return 	$armado;
	}

	public static  function ArrayDeOrganismo($id_usuario)
	{
		$grupos = OrganismoTable::getOrganismoBysuer($id_usuario);
		$base = 'Organismo_';
		$presentacion = array();

		foreach ( $grupos AS $gruposid ) {
			$armado = $base.$gruposid->getId();
			$presentacion[$armado] = 'Organismo - '.$gruposid->getNombre();
		}
		return $presentacion; 
	}
}