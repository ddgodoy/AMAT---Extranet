<?php

/**
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class EnvioComunicado extends BaseEnvioComunicado
{
  	
	public function enviarMails()
	{
		$usuarios = EnvioComunicadoTable::getUsuariosDeListasArray($this->getId());
		$contUsu = 0;
		$ListEmails="";	

		foreach ($usuarios as $usuario)
		{
			if ($usuario['email'])
			{ 				
				if ($this->envioMail($usuario['email'], $this->getTipoComunicado()->getImagen(), $this->getComunicado()->getDetalle(), $this->getComunicado()->getNombre(),$this->getId(),$usuario['id'])) {
					//echo "<br />email enviado a: ".$usuario;
				} else {
					//echo "<br />ERROR email: ".$usuario;
				}
				$ListEmails ="";
				$contUsu = 0;
			}			
		}
	}
	
	public static  function ReenviarMail($Id_Envio_comunicado, $Id_usuario)
	{
		$EnvioComunicado = Doctrine::getTable('EnvioComunicado')->find($Id_Envio_comunicado);	
		$Usuario = Usuario::getRepository()->find($Id_usuario);	

		if ($Usuario->getEmail()) {
			if (self::envioMail($Usuario->getEmail(), $EnvioComunicado->getTipoComunicado()->getImagen(), $EnvioComunicado->getComunicado()->getDetalle(), $EnvioComunicado->getComunicado()->getNombre(),$EnvioComunicado->getId(),$Usuario->getId()))
			{
				//echo "<br />email enviado a: ".$usuario;
			} else {
				//echo "<br />ERROR email: ".$usuario;
			}
			$ListEmails = "";
			$contUsu = 0;
		}
	}
	
	public  static function envioMail($to, $header_image, $body, $titulo, $idenvio, $idusuario)
	{
		sfLoader::loadHelpers(array('Url', 'Tag', 'Asset', 'Partial'));
		//$iPh = image_path('/images/logo_email.jpg', true);
		$cPh = "https://". $_SERVER['SERVER_NAME'] ."/web/uploads/tipo_comunicado/images/".$header_image;

		$succes  = false;
		$mailer  = new Swift(new Swift_Connection_NativeMail());
		$message = new Swift_Message(sfConfig::get('app_default_name_project').' - '.$titulo);

		$mailContext = array('imagen' => $cPh,
                                     'cuerpo' => $body,
                                     'head_image' => $iPh
		);
		$message->attach(new Swift_Message_Part(get_partial('comunicados/mailHtmlBody', $mailContext), 'text/html'));
		$message->attach(new Swift_Message_Part(get_partial('comunicados/mailTextBody', $mailContext), 'text/plain'));

		if ($mailer->send($message, $to, sfConfig::get('app_default_from_email_comunicados'), $idenvio, $idusuario)) {	
	        $succes = true;
		}
		$mailer->disconnect();

		return $succes;
	}
}