<?php
/**
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class EventoTable extends Doctrine_Table
{
//	public function getAll() **CAMBIO ET**
	public static function getAll($userId,$filtro='')
	{
		$q = Doctrine_Query::create();
		$q->from('Evento e');
		$q->leftJoin('e.UsuarioEvento ue');
		$q->where('e.deleted = 0');
		$q->andWhere('ue.usuario_id = '.$userId);
		if($filtro==1){$q->andWhere("e.estado='publicado'");}
		$q->orderBy('e.fecha DESC');
		$eventos = $q->execute();

		return $eventos;
	}

	public static function getIdsFromEventosByUsuarioId($usuarioId, $date='2000-01-01')
	{
		## Caso especial en el uso de un native SQL
		$con = Doctrine_Manager::getInstance()->connection();
		$st = $con->execute("SELECT e.id AS id FROM evento e LEFT JOIN notificacion n ON e.id=n.entidad_id WHERE n.usuario_id=$usuarioId AND e.fecha >= '$date' AND n.deleted=0");
		$results = $st->fetchAll();
		
		$notificaciones = array();
		foreach ($results as $n) {
			$notificaciones[] = $n['id'];
		}

		return $notificaciones;
	}
	
	public static function getByUsuarioId($usuarioId, $pager=false, $date=false)
	{
		## Obtengo los ids correspondientes del usuario
		$eventsIds = Doctrine::getTable('Evento')->getIdsFromEventosByUsuarioId($usuarioId, $date);
		$eventsIdsString = implode(', ', $eventsIds);
		if (!$eventsIdsString) $eventsIdsString = '-1';
		
		if ($pager) {
			$pager = new sfDoctrinePager('Evento', 10);
			
			if ($eventsIdsString) {
				$pager->getQuery()
					->from('Evento e')
					->where('e.deleted=0')
					->addWhere('e.id IN ( ' .$eventsIdsString . ')')
					->orderBy('e.fecha DESC');
			}
			
			return $pager;
			
		} else {
			$q = Doctrine_Query::create();
			$q->from('Evento e');
			$q->where('e.deleted = 0');
			$q->addWhere('e.id IN ( ' .$eventsIdsString . ')');
			$q->orderBy('e.fecha DESC');
		
			return $q->execute();
		}
	}
	
	public static function getEventoFecha($usurID, $xFiltro = '') 
	{
		if ($xFiltro != '') {
			$where = 'e.deleted = 0 AND ue.usuario_id = '.$usurID.' AND e.'.$xFiltro;
		} else {
			$where = 'e.deleted = 0 AND ue.usuario_id = '.$usurID;
		}
		$q = Doctrine_Query::create()
				->from('Evento e')
				->leftJoin('e.UsuarioEvento ue')
				->where($where)
				->orderBy('fecha DESC');

		$retorno = $q->execute();

		return $retorno;
	}
}